package saci.video {		import flash.display.Sprite;	import flash.display.Loader;	import flash.events.Event;	import flash.net.URLRequest;	import flash.display.DisplayObject;		public class YoutubeVideo extends Sprite {				private var _ytId:String;		private var _ytLoader:Loader;		private var _player:Object;		private var _width:Number = 320;		private var _height:Number = 240;				public function YoutubeVideo() {			_ytLoader = new Loader();		}				public function load(p_ytId:String):void {			destroy();			_ytId = p_ytId			_ytLoader.contentLoaderInfo.addEventListener(Event.INIT, _onLoaderInit);			var url:String = "http://www.youtube.com/v/" + _ytId  + "?version=3&autohide=1&autoplay=1";			trace("url:", url);			_ytLoader.load(new URLRequest(url));		}				public function size(p_width:Number, p_height:Number):void {			_width = p_width;			_height = p_height;		}				private function _onLoaderInit(e:Event):void {			_ytLoader.contentLoaderInfo.removeEventListener(Event.INIT, _onLoaderInit);			_ytLoader.content.addEventListener("onReady", _onPlayerReady);		    _ytLoader.content.addEventListener("onError", _onPlayerError);		    _ytLoader.content.addEventListener("onStateChange", _onStateChanged);			addChild(_ytLoader);		}				public function _onStateChanged(e:Event):void		{			// Event.data contains the event parameter, which is the new player state			trace(">+>+>+>+>+>+>+>+>+ _onStateChanged");			trace("player state:", Object(e).data);			switch (Object(e).data)			{				case 0:					dispatchEvent(new Event("YoutubeVideoEnd"));					break;								case 1:					dispatchEvent(new Event("YoutubeVideoPlaying"));					break;			}		}		private function _onPlayerError(e:Event):void {			_removeListeners();			trace("YoutubeVideo::_onPlayerError()", Object(e).data);		}		private function _onPlayerReady(e:Event):void {			//_removeListeners();			trace(">+>+>+>+>+>+>+>+>+ _onPlayerReady");			_player = _ytLoader.content;			_player.setSize(_width, _height);		}				private function _removeListeners():void {			_ytLoader.content.removeEventListener("onReady", _onPlayerReady);		    _ytLoader.content.removeEventListener("onError", _onPlayerError);		    _ytLoader.content.removeEventListener("onStateChanged", _onStateChanged);		}				public function destroy():void {			if (_player)			{				_player.destroy();			}		}				public function get ytId():String{ return _ytId; }				public function get player():Object{ return _player; }	}	}